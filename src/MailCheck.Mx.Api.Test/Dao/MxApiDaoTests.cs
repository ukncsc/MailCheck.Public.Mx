using System;
using System.Collections.Generic;
using System.Text;
using MailCheck.Mx.Api.Dao;
using NUnit.Framework;

namespace MailCheck.Mx.Api.Test.Dao
{
    [TestFixture]
    public class MxApiDaoTests
    {
        [Test]
        public void UnwrapEntity_NullIp_ReturnsNull()
        {
            MxApiDao.SimplifiedTlsEntityStateContainer container = new MxApiDao.SimplifiedTlsEntityStateContainer
            {
                Hostname = ".com.icritical.engine01-20334-1",
                IpAddress = "192.162.217.4",
                HostJson = null,
                IpJson = null,
            };

            var entity = MxApiDao.UnwrapEntity(container);
            Assert.Null(entity);
        }

        [Test]
        public void UnwrapEntity_NullIp_CorrectlyMerges()
        {
            MxApiDao.SimplifiedTlsEntityStateContainer container = new MxApiDao.SimplifiedTlsEntityStateContainer
            {
                Hostname = ".com.icritical.engine01-20334-1",
                IpAddress = "192.162.217.4",
                HostJson = @"{""hostname"": ""engine01-20334-1.icritical.com."", ""ipAddress"": ""192.162.217.4"", ""certificates"": null, ""tlsAdvisories"": null, ""certAdvisories"": [{""id"": ""729e3487-82df-47f7-a7df-d40d3cf4448e"", ""text"": ""The certificate electric.net with subject alternative name: DNS:electric.net, DNS:*.electric.net, DNS:*.fusemail.net, DNS:*.mx1.mailanyone.net, DNS:*.mx2.mx25.net, DNS:*.mx3.mailanyone.net, DNS:*.mx4.mx25.net, DNS:*.outbound1.mailanyone.net, DNS:*.outbound2.mx25.net, DNS:*.outbound3.mailanyone.net, DNS:*.outbound4.mx25.net does not match host engine01-20334-1.icritical.com."", ""markDown"": ""The certificate electric.net with subject alternative name: DNS:electric.net, DNS:*.electric.net, DNS:*.fusemail.net, DNS:*.mx1.mailanyone.net, DNS:*.mx2.mx25.net, DNS:*.mx3.mailanyone.net, DNS:*.mx4.mx25.net, DNS:*.outbound1.mailanyone.net, DNS:*.outbound2.mx25.net, DNS:*.outbound3.mailanyone.net, DNS:*.outbound4.mx25.net does not match host engine01-20334-1.icritical.com."", ""messageType"": ""error"", ""messageDisplay"": ""Standard""}], ""tlsLastUpdated"": ""0001-01-01T00:00:00"", ""certsLastUpdated"": ""2022-01-28T03:39:05.027Z""}",
                IpJson = null,
            };

            var entity = MxApiDao.UnwrapEntity(container);
            Assert.That(entity.Hostname, Is.EqualTo("engine01-20334-1.icritical.com."));
            Assert.That(entity.IpAddress, Is.EqualTo("192.162.217.4"));
            Assert.That(entity.TlsAdvisories, Is.Null);
            Assert.That(entity.CertAdvisories, Has.Count.EqualTo(1));
            Assert.That(entity.Certificates, Is.Null);
            Assert.That(entity.TlsLastUpdated, Is.Null);
            Assert.That(entity.CertsLastUpdated, Is.EqualTo(new DateTime(2022, 01, 28, 03, 39, 05, 027)));
        }


        [Test]
        public void UnwrapEntity_NullHost_CorrectlyMerges()
        {

            MxApiDao.SimplifiedTlsEntityStateContainer container = new MxApiDao.SimplifiedTlsEntityStateContainer
            {
                Hostname = ".com.icritical.engine01-20334-1",
                IpAddress = "192.162.217.4",
                HostJson = null,
                IpJson = @"{""hostname"": "" * "", ""ipAddress"": ""192.162.217.4"", ""certificates"": {""217074F71A08D273E6AAF38643CE37B89A245AE5"": ""MIIG9DCCBdygAwIBAgIRAPulbFTTM / kFA9f878ZzTd0wDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRlZDE3MDUGA1UEAxMuU2VjdGlnbyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBDQTAeFw0yMDA2MDkwMDAwMDBaFw0yMjA2MDkyMzU5NTlaMBcxFTATBgNVBAMTDGVsZWN0cmljLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMpvQy22oB / mHN5zJ85roIRw5gf88mT5MRe9Gd8oegJip8TyQfPHI0UDTMiW5YpmPxnJXXKKS2jnzCxW + sCU8QDN3 + 7 / opS9XySMHr4aOKxdP / xBksGeGuOWegLU + YnYrQ4 / DCfsvKIuvdQNQYoAtk1PWvbp7st9PtoMW84LgWe + ZGkisVMLXPyX3 + 5iYNMtVXsDb6FytMchwAaRVf5lFNWPKVDYT2E6WJjKMrg9mh / V1dum3h0nO0o6ZckTUnoC2pOnr5lQ3G + f9JAhgZ9DSKu9AbMNruPtGRbwhSWaSa02iEPjd2BkktjKlott6DChZOm8cDCyr83KoNQr1F5dj3sCAwEAAaOCA8AwggO8MB8GA1UdIwQYMBaAFI2MXsRUrYrhd + mb + ZsF4bgBjWHhMB0GA1UdDgQWBBQiVYwVsYGHRWYwA4yGVwGrnl10yjAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH / BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwSQYDVR0gBEIwQDA0BgsrBgEEAbIxAQICBzAlMCMGCCsGAQUFBwIBFhdodHRwczovL3NlY3RpZ28uY29tL0NQUzAIBgZngQwBAgEwgYQGCCsGAQUFBwEBBHgwdjBPBggrBgEFBQcwAoZDaHR0cDovL2NydC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBRG9tYWluVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNydDAjBggrBgEFBQcwAYYXaHR0cDovL29jc3Auc2VjdGlnby5jb20wggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1 + pEgMLWiiWn0830RLEF0vv1JuIWr8vxw / m1HAAABcpgGhV4AAAQDAEcwRQIhAMOtpj6 / Q7Xup0GznqwxX6FCMto1HLvPWTCZl2SzHQJTAiAkU69Vb6X / a3aGhf4lxiwnS1dHMeAh1cbHQeLZL0FBMQB2AN + lXqtogk8fbK3uuF9OPlrqzaISpGpejjsSwCBEXCpzAAABcpgGhYYAAAQDAEcwRQIgYfFc0UPLVs + SbJpDlZ23wOfu6iIRq22SHys2VOA + OfoCIQCf71h89RfLh1p0rMYjba8LdfC36cqZgPNYEZHkIRRAWgB1AG9Tdqwx8DEZ2JkApFEV / 3cVHBHZAsEAKQaNsgiaN9kTAAABcpgGhVcAAAQDAEYwRAIgAJxzBnl4zH / nr4quIDv6L6d3okk / oTumnLmlek30Vi8CIForPNfBiFoIKM69OY5gOWRJWqJLqu4NDcpaRAtoU0JPMIHpBgNVHREEgeEwgd6CDGVsZWN0cmljLm5ldIIOKi5lbGVjdHJpYy5uZXSCDiouZnVzZW1haWwubmV0ghQqLm14MS5tYWlsYW55b25lLm5ldIIOKi5teDIubXgyNS5uZXSCFCoubXgzLm1haWxhbnlvbmUubmV0gg4qLm14NC5teDI1Lm5ldIIaKi5vdXRib3VuZDEubWFpbGFueW9uZS5uZXSCFCoub3V0Ym91bmQyLm14MjUubmV0ghoqLm91dGJvdW5kMy5tYWlsYW55b25lLm5ldIIUKi5vdXRib3VuZDQubXgyNS5uZXQwDQYJKoZIhvcNAQELBQADggEBAGJZBGu9S0BkFJcTD8CGfjOwdu0 / VHTK8nrYZlT22p23BeiMbrD + spj3XtyeBJJMSSNIwpCbQEBboKlcHOdS0Wl4q5HJSgr9IN8tuLPx688MQGtoxW / kSeJ5gi + iXxjSg8AlL4GZdMaBSenlzj2jod3d + khPbmG + s9m / BBoQ1dRBTYu7gKbwEfQrjGlFEj3QUQaFUZJKtWQiWUwpv6XtMxz2qlr4GcLgWERp0a4GaFrL03ky6 + 0Ku5q / 2iSF7BbWWSrDgptSt / tnMT5EgCAsTNc / YIKZhg235jbJYxxoQnBO6yoe8hCDq4yPW8A8jKAyKe2vUxAK4e5fKM6iS6kMOwE = "", ""33E4E80807204C2B6182A3A14B591ACD25B5F0DB"": ""MIIGEzCCA / ugAwIBAgIQfVtRJrR2uhHbdBYLvFMNpzANBgkqhkiG9w0BAQwFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgxMTAyMDAwMDAwWhcNMzAxMjMxMjM1OTU5WjCBjzELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTcwNQYDVQQDEy5TZWN0aWdvIFJTQSBEb21haW4gVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nMz1tc8INAA0hdFuNY + B6I / x0HuMjDJsGz99J / LEpgPLT + NTQEMgg8Xf2Iu6bhIefsWg06t1zIlk7cHv7lQP6lMw0Aq6Tn / 2YHKHxYyQdqAJrkjeocgHuP / IJo8lURvh3UGkEC0MpMWCRAIIz7S3YcPb11RFGoKacVPAXJpz9OTTG0EoKMbgn6xmrntxZ7FN3ifmgg0 + 1YuWMQJDgZkW7w33PGfKGioVrCSo1yfu4iYCBskHaswha6vsC6eep3BwEIc4gLw6uBK0u + QDrTBQBbwb4VCSmT3pDCg / r8uoydajotYuK3DGReEY + 1vVv2Dy2A0xHS + 5p3b4eTlygxfFQIDAQABo4IBbjCCAWowHwYDVR0jBBgwFoAUU3m / WqorSs9UgOHYm8Cd8rIDZsswHQYDVR0OBBYEFI2MXsRUrYrhd + mb + ZsF4bgBjWHhMA4GA1UdDwEB / wQEAwIBhjASBgNVHRMBAf8ECDAGAQH / AgEAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAbBgNVHSAEFDASMAYGBFUdIAAwCAYGZ4EMAQIBMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDB2BggrBgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZaHR0cDovL29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAMr9hvQ5Iw0 / HukdN + Jx4GQHcEx2Ab / zDcLRSmjEzmldS + zGea6TvVKqJjUAXaPgREHzSyrHxVYbH7rM2kYb2OVG / Rr8PoLq0935JxCo2F57kaDl6r5ROVm + yezu / Coa9zcV3HAO4OLGiH19 + 24rcRki2aArPsrW04jTkZ6k4Zgle0rj8nSg6F0AnwnJOKf0hPHzPE / uWLMUxRP0T7dWbqWlod3zu4f + k + TY4CFM5ooQ0nBnzvg6s1SQ36yOoeNDT5++SR2RiOSLvxvcRviKFxmZEJCaOEDKNyJOuB56DPi / Z + fVGjmO + wea03KbNIaiGCpXZLoUmGv38sbZXQm2V0TP2ORQGgkE49Y9Y3IBbpNV9lXj9p5v//cWoaasm56ekBYdbqbe4oyALl6lFhd2zi+WJN44pDfwGF/Y4QA5C5BIG+3vzxhFoYt/jmPQT2BVPi7Fp2RBgvGQq6jG35LWjOhSbJuMLe/0CjraZwTiXWTb2qHSihrZe68Zk6s+go/lunrotEbaGmAhYLcmsJWTyXnW0OMGuf1pGg+pRyrbxmRE1a6Vqe8YAsOf4vmSyrcjC8azjUeqkk+B5yOGBQMkKW+ESPMFgKuOXwIlCypTPRpgSabuY0MLTDXJLR27lk8QyKGOHQ+SwMj4K00u/I5sUKUErmgQfky3xxzlIPK1aEn8="", ""d89E3BD43D5D909B47A18977AA9D5CE36CEE184C"": ""MIIFgTCCBGmgAwIBAgIQOXJEOvkit1HX02wQ3TE1lTANBgkqhkiG9w0BAQwFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5MDMxMjAwMDAwMFoXDTI4MTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5MRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgUlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAgBJlFzYOw9sIs9CsVw127c0n00ytUINh4qogTQktZAnczomfzD2p7PbPwdzx07HWezcoEStH2jnGvDoZtF+mvX2do2NCtnbyqTsrkfjib9DsFiCQCT7i6HTJGLSR1GJk23+jBvGIGGqQIjy8/hPwhxR79uQfjtTkUcYRZ0YIUcuGFFQ/vDP+fmyc/xadGL1RjjWmp2bIcmfbIWax1Jt4A8BQOujM8Ny8nkz+rwWWNR9XWrf/zvk9tyy29lTdyOcSOk2uTIq3XJq0tyA9yn8iNK5+O2hmAUTnAU5GU5szYPeUvlM3kHND8zLDU+/bqv50TmnHa4xgk97Exwzf4TKuzJM7UXiVZ4vuPVb+DNBpDxsP8yUmazNt925H+nND5X4OpWaxKXwyhGNVicQNwZNUMBkTrNN9N6frXTpsNVzbQdcS2qlJC9/YgIoJk2KOtWbPJYjNhLixP6Q5D9kCnusSTJV882sFqV4Wg8y4Z+LoE53MW4LTTLPtW//e5XOsIzstAL81VXQJSdhJWBp/kjbmUZIO8yZ9HE0XvMnsQybQv0FfQKlERPSZ51eHnlAfV1SoPv10Yy+xUGUJ5lhCLkMaTLTwJUdZ+gQek9QmRkpQgbLevni3/GcV4clXhB4PY9bpYrrWX1Uu6lzGKAgEJTm4Diup8kyXHAc/DVL17e8vgg8CAwEAAaOB8jCB7zAfBgNVHSMEGDAWgBSgEQojPpbxB+zirynvgqV/0DCktDAdBgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0gBAowCDAGBgRVHSAAMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL0FBQUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMA0GCSqGSIb3DQEBDAUAA4IBAQAYh1HcdCE9nIrgJ7cz0C7M7PDmy14R3iJvm3WOnnL+5Nb+qh+cli3vA0p+rvSNb3I8QzvAP+u431yqqcau8vzY7qN7Q/aGNnwU4M309z/+3ri0ivCRlv79Q2R+/czSAaF9ffgZGclCKxO/WIu6pKJmBHaIkU4MiRTOok3JMrO66BQavHHxW/BBC5gACiIDEOUMsfnNkjcZ7Tvx5Dq2+UUTJnWvu6rvP3t3O9LEApE9GQDTF1w52z97GA1FzZOFli9d31kWTz9RvdVFGD/tSo7oBmF0Ixa1DVBzJ0RHfxBdiSprhTEUxOipakyAvGp4z7h/jnZymQyd/teRCBaho1+V""}, ""tlsAdvisories"": [{""id"": ""ee554c70-0536-4980-adce-5a31a7f1e85b"", ""text"": ""This mailserver does not support TLS 1.3 with the recommended ciphersuites."", ""markDown"": null, ""messageType"": ""info"", ""messageDisplay"": ""Standard""}, {""id"": ""9ddf78af-0fd9-4407-94b9-62d2687f26e1"", ""text"": ""This mailserver supports TLS 1.2, but does not prefer recommended ciphersuites which may result in weaker ciphersuites being used with some senders."", ""markDown"": null, ""messageType"": ""warning"", ""messageDisplay"": ""Standard""}], ""certAdvisories"": [], ""tlsLastUpdated"": ""2022-01-28T03:39:01.831Z"", ""certsLastUpdated"": ""2022-01-28T03:39:05.027Z""}",
            };

            var entity = MxApiDao.UnwrapEntity(container);
            Assert.That(entity.Hostname, Is.EqualTo("engine01-20334-1.icritical.com."));
            Assert.That(entity.IpAddress, Is.EqualTo("192.162.217.4"));
            Assert.That(entity.TlsAdvisories, Has.Count.EqualTo(2));
            Assert.That(entity.CertAdvisories, Has.Count.EqualTo(0));
            Assert.That(entity.Certificates, Has.Count.EqualTo(3));
            Assert.That(entity.TlsLastUpdated, Is.EqualTo(new DateTime(2022, 01, 28, 03, 39, 01, 831)));
            Assert.That(entity.CertsLastUpdated, Is.EqualTo(new DateTime(2022, 01, 28, 03, 39, 05, 027)));
        }

        [Test]
        public void UnwrapEntity_IpAndHost_CorrectlyMerges()
        {

            MxApiDao.SimplifiedTlsEntityStateContainer container = new MxApiDao.SimplifiedTlsEntityStateContainer
            {
                Hostname = ".com.icritical.engine01-20334-1",
                IpAddress = "192.162.217.4",
                HostJson = @"{""hostname"": ""engine01-20334-1.icritical.com."", ""ipAddress"": ""192.162.217.4"", ""certificates"": null, ""tlsAdvisories"": null, ""certAdvisories"": [{""id"": ""729e3487-82df-47f7-a7df-d40d3cf4448e"", ""text"": ""The certificate electric.net with subject alternative name: DNS:electric.net, DNS:*.electric.net, DNS:*.fusemail.net, DNS:*.mx1.mailanyone.net, DNS:*.mx2.mx25.net, DNS:*.mx3.mailanyone.net, DNS:*.mx4.mx25.net, DNS:*.outbound1.mailanyone.net, DNS:*.outbound2.mx25.net, DNS:*.outbound3.mailanyone.net, DNS:*.outbound4.mx25.net does not match host engine01-20334-1.icritical.com."", ""markDown"": ""The certificate electric.net with subject alternative name: DNS:electric.net, DNS:*.electric.net, DNS:*.fusemail.net, DNS:*.mx1.mailanyone.net, DNS:*.mx2.mx25.net, DNS:*.mx3.mailanyone.net, DNS:*.mx4.mx25.net, DNS:*.outbound1.mailanyone.net, DNS:*.outbound2.mx25.net, DNS:*.outbound3.mailanyone.net, DNS:*.outbound4.mx25.net does not match host engine01-20334-1.icritical.com."", ""messageType"": ""error"", ""messageDisplay"": ""Standard""}], ""tlsLastUpdated"": ""0001-01-01T00:00:00"", ""certsLastUpdated"": ""2022-01-28T03:39:05.027Z""}",
                IpJson = @"{""hostname"": "" * "", ""ipAddress"": ""192.162.217.4"", ""certificates"": {""217074F71A08D273E6AAF38643CE37B89A245AE5"": ""MIIG9DCCBdygAwIBAgIRAPulbFTTM / kFA9f878ZzTd0wDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGDAWBgNVBAoTD1NlY3RpZ28gTGltaXRlZDE3MDUGA1UEAxMuU2VjdGlnbyBSU0EgRG9tYWluIFZhbGlkYXRpb24gU2VjdXJlIFNlcnZlciBDQTAeFw0yMDA2MDkwMDAwMDBaFw0yMjA2MDkyMzU5NTlaMBcxFTATBgNVBAMTDGVsZWN0cmljLm5ldDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMpvQy22oB / mHN5zJ85roIRw5gf88mT5MRe9Gd8oegJip8TyQfPHI0UDTMiW5YpmPxnJXXKKS2jnzCxW + sCU8QDN3 + 7 / opS9XySMHr4aOKxdP / xBksGeGuOWegLU + YnYrQ4 / DCfsvKIuvdQNQYoAtk1PWvbp7st9PtoMW84LgWe + ZGkisVMLXPyX3 + 5iYNMtVXsDb6FytMchwAaRVf5lFNWPKVDYT2E6WJjKMrg9mh / V1dum3h0nO0o6ZckTUnoC2pOnr5lQ3G + f9JAhgZ9DSKu9AbMNruPtGRbwhSWaSa02iEPjd2BkktjKlott6DChZOm8cDCyr83KoNQr1F5dj3sCAwEAAaOCA8AwggO8MB8GA1UdIwQYMBaAFI2MXsRUrYrhd + mb + ZsF4bgBjWHhMB0GA1UdDgQWBBQiVYwVsYGHRWYwA4yGVwGrnl10yjAOBgNVHQ8BAf8EBAMCBaAwDAYDVR0TAQH / BAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwSQYDVR0gBEIwQDA0BgsrBgEEAbIxAQICBzAlMCMGCCsGAQUFBwIBFhdodHRwczovL3NlY3RpZ28uY29tL0NQUzAIBgZngQwBAgEwgYQGCCsGAQUFBwEBBHgwdjBPBggrBgEFBQcwAoZDaHR0cDovL2NydC5zZWN0aWdvLmNvbS9TZWN0aWdvUlNBRG9tYWluVmFsaWRhdGlvblNlY3VyZVNlcnZlckNBLmNydDAjBggrBgEFBQcwAYYXaHR0cDovL29jc3Auc2VjdGlnby5jb20wggF9BgorBgEEAdZ5AgQCBIIBbQSCAWkBZwB2AEalVet1 + pEgMLWiiWn0830RLEF0vv1JuIWr8vxw / m1HAAABcpgGhV4AAAQDAEcwRQIhAMOtpj6 / Q7Xup0GznqwxX6FCMto1HLvPWTCZl2SzHQJTAiAkU69Vb6X / a3aGhf4lxiwnS1dHMeAh1cbHQeLZL0FBMQB2AN + lXqtogk8fbK3uuF9OPlrqzaISpGpejjsSwCBEXCpzAAABcpgGhYYAAAQDAEcwRQIgYfFc0UPLVs + SbJpDlZ23wOfu6iIRq22SHys2VOA + OfoCIQCf71h89RfLh1p0rMYjba8LdfC36cqZgPNYEZHkIRRAWgB1AG9Tdqwx8DEZ2JkApFEV / 3cVHBHZAsEAKQaNsgiaN9kTAAABcpgGhVcAAAQDAEYwRAIgAJxzBnl4zH / nr4quIDv6L6d3okk / oTumnLmlek30Vi8CIForPNfBiFoIKM69OY5gOWRJWqJLqu4NDcpaRAtoU0JPMIHpBgNVHREEgeEwgd6CDGVsZWN0cmljLm5ldIIOKi5lbGVjdHJpYy5uZXSCDiouZnVzZW1haWwubmV0ghQqLm14MS5tYWlsYW55b25lLm5ldIIOKi5teDIubXgyNS5uZXSCFCoubXgzLm1haWxhbnlvbmUubmV0gg4qLm14NC5teDI1Lm5ldIIaKi5vdXRib3VuZDEubWFpbGFueW9uZS5uZXSCFCoub3V0Ym91bmQyLm14MjUubmV0ghoqLm91dGJvdW5kMy5tYWlsYW55b25lLm5ldIIUKi5vdXRib3VuZDQubXgyNS5uZXQwDQYJKoZIhvcNAQELBQADggEBAGJZBGu9S0BkFJcTD8CGfjOwdu0 / VHTK8nrYZlT22p23BeiMbrD + spj3XtyeBJJMSSNIwpCbQEBboKlcHOdS0Wl4q5HJSgr9IN8tuLPx688MQGtoxW / kSeJ5gi + iXxjSg8AlL4GZdMaBSenlzj2jod3d + khPbmG + s9m / BBoQ1dRBTYu7gKbwEfQrjGlFEj3QUQaFUZJKtWQiWUwpv6XtMxz2qlr4GcLgWERp0a4GaFrL03ky6 + 0Ku5q / 2iSF7BbWWSrDgptSt / tnMT5EgCAsTNc / YIKZhg235jbJYxxoQnBO6yoe8hCDq4yPW8A8jKAyKe2vUxAK4e5fKM6iS6kMOwE = "", ""33E4E80807204C2B6182A3A14B591ACD25B5F0DB"": ""MIIGEzCCA / ugAwIBAgIQfVtRJrR2uhHbdBYLvFMNpzANBgkqhkiG9w0BAQwFADCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgxMTAyMDAwMDAwWhcNMzAxMjMxMjM1OTU5WjCBjzELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UEChMPU2VjdGlnbyBMaW1pdGVkMTcwNQYDVQQDEy5TZWN0aWdvIFJTQSBEb21haW4gVmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1nMz1tc8INAA0hdFuNY + B6I / x0HuMjDJsGz99J / LEpgPLT + NTQEMgg8Xf2Iu6bhIefsWg06t1zIlk7cHv7lQP6lMw0Aq6Tn / 2YHKHxYyQdqAJrkjeocgHuP / IJo8lURvh3UGkEC0MpMWCRAIIz7S3YcPb11RFGoKacVPAXJpz9OTTG0EoKMbgn6xmrntxZ7FN3ifmgg0 + 1YuWMQJDgZkW7w33PGfKGioVrCSo1yfu4iYCBskHaswha6vsC6eep3BwEIc4gLw6uBK0u + QDrTBQBbwb4VCSmT3pDCg / r8uoydajotYuK3DGReEY + 1vVv2Dy2A0xHS + 5p3b4eTlygxfFQIDAQABo4IBbjCCAWowHwYDVR0jBBgwFoAUU3m / WqorSs9UgOHYm8Cd8rIDZsswHQYDVR0OBBYEFI2MXsRUrYrhd + mb + ZsF4bgBjWHhMA4GA1UdDwEB / wQEAwIBhjASBgNVHRMBAf8ECDAGAQH / AgEAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAbBgNVHSAEFDASMAYGBFUdIAAwCAYGZ4EMAQIBMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDB2BggrBgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRydXN0LmNvbS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZaHR0cDovL29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAMr9hvQ5Iw0 / HukdN + Jx4GQHcEx2Ab / zDcLRSmjEzmldS + zGea6TvVKqJjUAXaPgREHzSyrHxVYbH7rM2kYb2OVG / Rr8PoLq0935JxCo2F57kaDl6r5ROVm + yezu / Coa9zcV3HAO4OLGiH19 + 24rcRki2aArPsrW04jTkZ6k4Zgle0rj8nSg6F0AnwnJOKf0hPHzPE / uWLMUxRP0T7dWbqWlod3zu4f + k + TY4CFM5ooQ0nBnzvg6s1SQ36yOoeNDT5++SR2RiOSLvxvcRviKFxmZEJCaOEDKNyJOuB56DPi / Z + fVGjmO + wea03KbNIaiGCpXZLoUmGv38sbZXQm2V0TP2ORQGgkE49Y9Y3IBbpNV9lXj9p5v//cWoaasm56ekBYdbqbe4oyALl6lFhd2zi+WJN44pDfwGF/Y4QA5C5BIG+3vzxhFoYt/jmPQT2BVPi7Fp2RBgvGQq6jG35LWjOhSbJuMLe/0CjraZwTiXWTb2qHSihrZe68Zk6s+go/lunrotEbaGmAhYLcmsJWTyXnW0OMGuf1pGg+pRyrbxmRE1a6Vqe8YAsOf4vmSyrcjC8azjUeqkk+B5yOGBQMkKW+ESPMFgKuOXwIlCypTPRpgSabuY0MLTDXJLR27lk8QyKGOHQ+SwMj4K00u/I5sUKUErmgQfky3xxzlIPK1aEn8="", ""d89E3BD43D5D909B47A18977AA9D5CE36CEE184C"": ""MIIFgTCCBGmgAwIBAgIQOXJEOvkit1HX02wQ3TE1lTANBgkqhkiG9w0BAQwFADB7MQswCQYDVQQGEwJHQjEbMBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRowGAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmljYXRlIFNlcnZpY2VzMB4XDTE5MDMxMjAwMDAwMFoXDTI4MTIzMTIzNTk1OVowgYgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpOZXcgSmVyc2V5MRQwEgYDVQQHEwtKZXJzZXkgQ2l0eTEeMBwGA1UEChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMS4wLAYDVQQDEyVVU0VSVHJ1c3QgUlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAgBJlFzYOw9sIs9CsVw127c0n00ytUINh4qogTQktZAnczomfzD2p7PbPwdzx07HWezcoEStH2jnGvDoZtF+mvX2do2NCtnbyqTsrkfjib9DsFiCQCT7i6HTJGLSR1GJk23+jBvGIGGqQIjy8/hPwhxR79uQfjtTkUcYRZ0YIUcuGFFQ/vDP+fmyc/xadGL1RjjWmp2bIcmfbIWax1Jt4A8BQOujM8Ny8nkz+rwWWNR9XWrf/zvk9tyy29lTdyOcSOk2uTIq3XJq0tyA9yn8iNK5+O2hmAUTnAU5GU5szYPeUvlM3kHND8zLDU+/bqv50TmnHa4xgk97Exwzf4TKuzJM7UXiVZ4vuPVb+DNBpDxsP8yUmazNt925H+nND5X4OpWaxKXwyhGNVicQNwZNUMBkTrNN9N6frXTpsNVzbQdcS2qlJC9/YgIoJk2KOtWbPJYjNhLixP6Q5D9kCnusSTJV882sFqV4Wg8y4Z+LoE53MW4LTTLPtW//e5XOsIzstAL81VXQJSdhJWBp/kjbmUZIO8yZ9HE0XvMnsQybQv0FfQKlERPSZ51eHnlAfV1SoPv10Yy+xUGUJ5lhCLkMaTLTwJUdZ+gQek9QmRkpQgbLevni3/GcV4clXhB4PY9bpYrrWX1Uu6lzGKAgEJTm4Diup8kyXHAc/DVL17e8vgg8CAwEAAaOB8jCB7zAfBgNVHSMEGDAWgBSgEQojPpbxB+zirynvgqV/0DCktDAdBgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wEQYDVR0gBAowCDAGBgRVHSAAMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9jcmwuY29tb2RvY2EuY29tL0FBQUNlcnRpZmljYXRlU2VydmljZXMuY3JsMDQGCCsGAQUFBwEBBCgwJjAkBggrBgEFBQcwAYYYaHR0cDovL29jc3AuY29tb2RvY2EuY29tMA0GCSqGSIb3DQEBDAUAA4IBAQAYh1HcdCE9nIrgJ7cz0C7M7PDmy14R3iJvm3WOnnL+5Nb+qh+cli3vA0p+rvSNb3I8QzvAP+u431yqqcau8vzY7qN7Q/aGNnwU4M309z/+3ri0ivCRlv79Q2R+/czSAaF9ffgZGclCKxO/WIu6pKJmBHaIkU4MiRTOok3JMrO66BQavHHxW/BBC5gACiIDEOUMsfnNkjcZ7Tvx5Dq2+UUTJnWvu6rvP3t3O9LEApE9GQDTF1w52z97GA1FzZOFli9d31kWTz9RvdVFGD/tSo7oBmF0Ixa1DVBzJ0RHfxBdiSprhTEUxOipakyAvGp4z7h/jnZymQyd/teRCBaho1+V""}, ""tlsAdvisories"": [{""id"": ""ee554c70-0536-4980-adce-5a31a7f1e85b"", ""text"": ""This mailserver does not support TLS 1.3 with the recommended ciphersuites."", ""markDown"": null, ""messageType"": ""info"", ""messageDisplay"": ""Standard""}, {""id"": ""9ddf78af-0fd9-4407-94b9-62d2687f26e1"", ""text"": ""This mailserver supports TLS 1.2, but does not prefer recommended ciphersuites which may result in weaker ciphersuites being used with some senders."", ""markDown"": null, ""messageType"": ""warning"", ""messageDisplay"": ""Standard""}], ""certAdvisories"": [], ""tlsLastUpdated"": ""2022-01-28T03:39:01.831Z"", ""certsLastUpdated"": ""2022-01-28T03:39:05.027Z""}",
            };

            var entity = MxApiDao.UnwrapEntity(container);
            Assert.That(entity.Hostname, Is.EqualTo("engine01-20334-1.icritical.com."));
            Assert.That(entity.IpAddress, Is.EqualTo("192.162.217.4"));
            Assert.That(entity.TlsAdvisories, Has.Count.EqualTo(2));
            Assert.That(entity.CertAdvisories, Has.Count.EqualTo(1));
            Assert.That(entity.Certificates, Has.Count.EqualTo(3));
            Assert.That(entity.TlsLastUpdated, Is.EqualTo(new DateTime(2022, 01, 28, 03, 39, 01, 831)));
            Assert.That(entity.CertsLastUpdated, Is.EqualTo(new DateTime(2022, 01, 28, 03, 39, 05, 027)));
        }
    }
}
